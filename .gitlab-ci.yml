variables:
  PYTHON_ORB_VERSION: "2.0.3"
  NODE_ORB_VERSION: "5.0.1"
  CACHE_VERSION: "v4"
  GLOBAL_DOCKER_IMAGE: "cimg/python:3.10-node"
  VERSION_TAG_REGEX: "/^v\\d+\\.\\d+\\.\\d+$/" # version regex vx.x.x (i.e. v1.2.3)
  CURRENT_BRANCH_NAME: "added_security_checks_to_parse_emails_repo"
stages:
  - test
  - deploy
  - security
  - fan-in

.default:
  image: $GLOBAL_DOCKER_IMAGE
  before_script:
    - rm -rf $HOME/.poetry/bin/poetry
    - curl -sSL https://install.python-poetry.org | python3 -
    - poetry --version
    - poetry install
    - echo "tag- ${CI_COMMIT_TAG}"

run-unit-tests:
  stage: test
  image: cimg/python:3.10-node
  script:
    - poetry install
    - poetry run pytest -p no:warnings -v --cov=parse_emails --cov-report=html
  rules:
    - if: '$SECURITY_SCANS == "true"'
      when: never
  artifacts:
    paths:
      - integration-test-results
      - coverage_html_report
  after_script:
    - if [ -n "$COVERALLS_REPO_TOKEN" ]; then
        pip install coveralls;
        coveralls;
      else
        echo "Skipping coveralls";
      fi
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.8", "3.9", "3.10"]

precommit-checks:
  stage: test
  extends: .default
  script:
    - cp .pre-commit-config.yaml pre-commit-cache-key.txt
    - poetry run python --version --version >> pre-commit-cache-key.txt
    - poetry run pre-commit --version
    - poetry run pre-commit run -a
    - poetry run pytest --collect-only .
  rules:
    - if: '$SECURITY_SCANS == "true"'
      when: never
  cache:
    key: v1-pc-cache-${CI_COMMIT_SHA}
    paths:
      - ~/.cache/pre-commit

build:
  stage: test
  extends: .default
  script:
    - poetry build
  rules:
    - if: '$SECURITY_SCANS == "true"'
      when: never
  artifacts:
    paths:
      - dist

deploy:
  stage: deploy
  extends: .default
  script:
    - poetry publish -u __token__ -p ${PYPI_TOKEN}
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
    - if: '$SECURITY_SCANS == "true"'
      when: never
  dependencies:
    - run-unit-tests
    - precommit-checks
    - build

include:
  - file: "/.gitlab/ci/.gitlab-ci.security-scans.yml"
    ref: "added_security_checks_to_parse_emails_repo"
    project: "${CI_PROJECT_NAMESPACE}/infra"
  - file: "/.gitlab/ci/global.yml"
    ref: "added_security_checks_to_parse_emails_repo"
    project: "${CI_PROJECT_NAMESPACE}/infra"
  - file: "/.gitlab/ci/variables.yml"
    ref: "added_security_checks_to_parse_emails_repo"
    project: "${CI_PROJECT_NAMESPACE}/infra"
  - file: "/.gitlab/ci/slack-notify.yml"
    ref: "added_security_checks_to_parse_emails_repo" 
    project: "${CI_PROJECT_NAMESPACE}/infra"
